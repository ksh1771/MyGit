
################################################################
# This is a generated script based on design: axi_system
#
# Though there are limitations about the generated script,
# the main purpose of this utility is to make learning
# IP Integrator Tcl commands easier.
################################################################

################################################################
# Check if script is running in correct Vivado version.
################################################################
set scripts_vivado_version 2015.2
set current_vivado_version [version -short]

if { [string first $scripts_vivado_version $current_vivado_version] == -1 } {
   puts ""
   puts "ERROR: This script was generated using Vivado <$scripts_vivado_version> and is being run in <$current_vivado_version> of Vivado. Please run the script in Vivado <$scripts_vivado_version> then open the design in Vivado <$current_vivado_version>. Upgrade the design by running \"Tools => Report => Report IP Status...\", then run write_bd_tcl to create an updated script."

   return 1
}

################################################################
# START
################################################################

# To test this script, run the following commands from Vivado Tcl console:
# source axi_system_script.tcl

# If you do not already have a project created,
# you can create a project using the following command:
#    create_project project_1 myproj -part xc7vx485tffg1761-2
#    set_property BOARD_PART xilinx.com:vc707:part0:1.0 [current_project]

# CHECKING IF PROJECT EXISTS
if { [get_projects -quiet] eq "" } {
   puts "ERROR: Please open or create a project!"
   return 1
}



# CHANGE DESIGN NAME HERE
set design_name axi_system

# If you do not already have an existing IP Integrator design open,
# you can create a design using the following command:
#    create_bd_design $design_name

# Creating design if needed
set errMsg ""
set nRet 0

set cur_design [current_bd_design -quiet]
set list_cells [get_bd_cells -quiet]

if { ${design_name} eq "" } {
   # USE CASES:
   #    1) Design_name not set

   set errMsg "ERROR: Please set the variable <design_name> to a non-empty value."
   set nRet 1

} elseif { ${cur_design} ne "" && ${list_cells} eq "" } {
   # USE CASES:
   #    2): Current design opened AND is empty AND names same.
   #    3): Current design opened AND is empty AND names diff; design_name NOT in project.
   #    4): Current design opened AND is empty AND names diff; design_name exists in project.

   if { $cur_design ne $design_name } {
      puts "INFO: Changing value of <design_name> from <$design_name> to <$cur_design> since current design is empty."
      set design_name [get_property NAME $cur_design]
   }
   puts "INFO: Constructing design in IPI design <$cur_design>..."

} elseif { ${cur_design} ne "" && $list_cells ne "" && $cur_design eq $design_name } {
   # USE CASES:
   #    5) Current design opened AND has components AND same names.

   set errMsg "ERROR: Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
   set nRet 1
} elseif { [get_files -quiet ${design_name}.bd] ne "" } {
   # USE CASES: 
   #    6) Current opened design, has components, but diff names, design_name exists in project.
   #    7) No opened design, design_name exists in project.

   set errMsg "ERROR: Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
   set nRet 2

} else {
   # USE CASES:
   #    8) No opened design, design_name not in project.
   #    9) Current opened design, has components, but diff names, design_name not in project.

   puts "INFO: Currently there is no design <$design_name> in project, so creating one..."

   create_bd_design $design_name

   puts "INFO: Making design <$design_name> as current_bd_design."
   current_bd_design $design_name

}

puts "INFO: Currently the variable <design_name> is equal to \"$design_name\"."

if { $nRet != 0 } {
   puts $errMsg
   return $nRet
}


##################################################################
# MIG PRJ FILE TCL PROCs
##################################################################

proc write_mig_file_axi_system_mig_7series_0_0 { str_mig_prj_filepath } {

   set mig_prj_file [open $str_mig_prj_filepath  w+]

   puts $mig_prj_file {<?xml version='1.0' encoding='UTF-8'?>}
   puts $mig_prj_file {<!-- IMPORTANT: This is an internal file that has been generated by the MIG software. Any direct editing or changes made to this file may result in unpredictable behavior or data corruption. It is strongly advised that users do not edit the contents of this file. Re-run the MIG GUI with the required settings if any of the options provided below need to be altered. -->}
   puts $mig_prj_file {<Project NoOfControllers="1" >}
   puts $mig_prj_file {    <ModuleName>axi_system_mig_7series_0_0</ModuleName>}
   puts $mig_prj_file {    <dci_inouts_inputs>1</dci_inouts_inputs>}
   puts $mig_prj_file {    <dci_inputs>1</dci_inputs>}
   puts $mig_prj_file {    <Debug_En>OFF</Debug_En>}
   puts $mig_prj_file {    <DataDepth_En>1024</DataDepth_En>}
   puts $mig_prj_file {    <LowPower_En>ON</LowPower_En>}
   puts $mig_prj_file {    <XADC_En>Enabled</XADC_En>}
   puts $mig_prj_file {    <TargetFPGA>xc7vx485t-ffg1761/-2</TargetFPGA>}
   puts $mig_prj_file {    <Version>2.3</Version>}
   puts $mig_prj_file {    <SystemClock>Differential</SystemClock>}
   puts $mig_prj_file {    <ReferenceClock>Use System Clock</ReferenceClock>}
   puts $mig_prj_file {    <SysResetPolarity>ACTIVE LOW</SysResetPolarity>}
   puts $mig_prj_file {    <BankSelectionFlag>FALSE</BankSelectionFlag>}
   puts $mig_prj_file {    <InternalVref>0</InternalVref>}
   puts $mig_prj_file {    <dci_hr_inouts_inputs>50 Ohms</dci_hr_inouts_inputs>}
   puts $mig_prj_file {    <dci_cascade>0</dci_cascade>}
   puts $mig_prj_file {    <Controller number="0" >}
   puts $mig_prj_file {        <MemoryDevice>DDR3_SDRAM/Components/MT41J512M8XX-107</MemoryDevice>}
   puts $mig_prj_file {        <TimePeriod>2500</TimePeriod>}
   puts $mig_prj_file {        <VccAuxIO>1.8V</VccAuxIO>}
   puts $mig_prj_file {        <PHYRatio>2:1</PHYRatio>}
   puts $mig_prj_file {        <InputClkFreq>200</InputClkFreq>}
   puts $mig_prj_file {        <UIExtraClocks>0</UIExtraClocks>}
   puts $mig_prj_file {        <MMCM_VCO>800</MMCM_VCO>}
   puts $mig_prj_file {        <MMCMClkOut0> 1.000</MMCMClkOut0>}
   puts $mig_prj_file {        <MMCMClkOut1>1</MMCMClkOut1>}
   puts $mig_prj_file {        <MMCMClkOut2>1</MMCMClkOut2>}
   puts $mig_prj_file {        <MMCMClkOut3>1</MMCMClkOut3>}
   puts $mig_prj_file {        <MMCMClkOut4>1</MMCMClkOut4>}
   puts $mig_prj_file {        <DataWidth>64</DataWidth>}
   puts $mig_prj_file {        <DeepMemory>1</DeepMemory>}
   puts $mig_prj_file {        <DataMask>1</DataMask>}
   puts $mig_prj_file {        <ECC>Disabled</ECC>}
   puts $mig_prj_file {        <Ordering>Normal</Ordering>}
   puts $mig_prj_file {        <CustomPart>FALSE</CustomPart>}
   puts $mig_prj_file {        <NewPartName></NewPartName>}
   puts $mig_prj_file {        <RowAddress>16</RowAddress>}
   puts $mig_prj_file {        <ColAddress>10</ColAddress>}
   puts $mig_prj_file {        <BankAddress>3</BankAddress>}
   puts $mig_prj_file {        <MemoryVoltage>1.5V</MemoryVoltage>}
   puts $mig_prj_file {        <C0_MEM_SIZE>4294967296</C0_MEM_SIZE>}
   puts $mig_prj_file {        <UserMemoryAddressMap>BANK_ROW_COLUMN</UserMemoryAddressMap>}
   puts $mig_prj_file {        <PinSelection>}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="T35" SLEW="" name="ddr3_addr[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="P36" SLEW="" name="ddr3_addr[10]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="P35" SLEW="" name="ddr3_addr[11]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="N34" SLEW="" name="ddr3_addr[12]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="N33" SLEW="" name="ddr3_addr[13]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="R35" SLEW="" name="ddr3_addr[14]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="T34" SLEW="" name="ddr3_addr[15]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="U34" SLEW="" name="ddr3_addr[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="P38" SLEW="" name="ddr3_addr[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="P37" SLEW="" name="ddr3_addr[3]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="R37" SLEW="" name="ddr3_addr[4]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="T36" SLEW="" name="ddr3_addr[5]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="P33" SLEW="" name="ddr3_addr[6]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="P32" SLEW="" name="ddr3_addr[7]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="R32" SLEW="" name="ddr3_addr[8]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="T32" SLEW="" name="ddr3_addr[9]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="U37" SLEW="" name="ddr3_ba[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="R39" SLEW="" name="ddr3_ba[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="R38" SLEW="" name="ddr3_ba[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="U39" SLEW="" name="ddr3_cas_n" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15" PADName="R34" SLEW="" name="ddr3_ck_n[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15" PADName="R33" SLEW="" name="ddr3_ck_p[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="V34" SLEW="" name="ddr3_cke[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="V33" SLEW="" name="ddr3_cs_n[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="E40" SLEW="" name="ddr3_dm[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="H40" SLEW="" name="ddr3_dm[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="M42" SLEW="" name="ddr3_dm[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="P41" SLEW="" name="ddr3_dm[3]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="AB41" SLEW="" name="ddr3_dm[4]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="AC38" SLEW="" name="ddr3_dm[5]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="AF42" SLEW="" name="ddr3_dm[6]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="AK40" SLEW="" name="ddr3_dm[7]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="D40" SLEW="" name="ddr3_dq[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="G39" SLEW="" name="ddr3_dq[10]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="F40" SLEW="" name="ddr3_dq[11]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="F41" SLEW="" name="ddr3_dq[12]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="J40" SLEW="" name="ddr3_dq[13]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="J41" SLEW="" name="ddr3_dq[14]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="K39" SLEW="" name="ddr3_dq[15]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="L39" SLEW="" name="ddr3_dq[16]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="L40" SLEW="" name="ddr3_dq[17]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="M41" SLEW="" name="ddr3_dq[18]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="L41" SLEW="" name="ddr3_dq[19]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="A40" SLEW="" name="ddr3_dq[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="L42" SLEW="" name="ddr3_dq[20]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="K37" SLEW="" name="ddr3_dq[21]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="K38" SLEW="" name="ddr3_dq[22]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="M36" SLEW="" name="ddr3_dq[23]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="M37" SLEW="" name="ddr3_dq[24]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="M38" SLEW="" name="ddr3_dq[25]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="N38" SLEW="" name="ddr3_dq[26]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="M39" SLEW="" name="ddr3_dq[27]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="R40" SLEW="" name="ddr3_dq[28]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="P40" SLEW="" name="ddr3_dq[29]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="A41" SLEW="" name="ddr3_dq[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="N39" SLEW="" name="ddr3_dq[30]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="N40" SLEW="" name="ddr3_dq[31]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AB42" SLEW="" name="ddr3_dq[32]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="W40" SLEW="" name="ddr3_dq[33]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="Y40" SLEW="" name="ddr3_dq[34]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="Y42" SLEW="" name="ddr3_dq[35]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AA42" SLEW="" name="ddr3_dq[36]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AB38" SLEW="" name="ddr3_dq[37]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AB39" SLEW="" name="ddr3_dq[38]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AA40" SLEW="" name="ddr3_dq[39]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="B41" SLEW="" name="ddr3_dq[3]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AC39" SLEW="" name="ddr3_dq[40]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AD42" SLEW="" name="ddr3_dq[41]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AE42" SLEW="" name="ddr3_dq[42]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AC40" SLEW="" name="ddr3_dq[43]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AC41" SLEW="" name="ddr3_dq[44]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AE39" SLEW="" name="ddr3_dq[45]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AE40" SLEW="" name="ddr3_dq[46]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AD40" SLEW="" name="ddr3_dq[47]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AF39" SLEW="" name="ddr3_dq[48]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AF40" SLEW="" name="ddr3_dq[49]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="B42" SLEW="" name="ddr3_dq[4]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AF41" SLEW="" name="ddr3_dq[50]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AG41" SLEW="" name="ddr3_dq[51]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AG42" SLEW="" name="ddr3_dq[52]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AG38" SLEW="" name="ddr3_dq[53]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AH38" SLEW="" name="ddr3_dq[54]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AJ38" SLEW="" name="ddr3_dq[55]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AH40" SLEW="" name="ddr3_dq[56]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AH41" SLEW="" name="ddr3_dq[57]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AJ40" SLEW="" name="ddr3_dq[58]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AJ41" SLEW="" name="ddr3_dq[59]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="F42" SLEW="" name="ddr3_dq[5]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AK39" SLEW="" name="ddr3_dq[60]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AL39" SLEW="" name="ddr3_dq[61]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AJ42" SLEW="" name="ddr3_dq[62]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="AK42" SLEW="" name="ddr3_dq[63]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="E42" SLEW="" name="ddr3_dq[6]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="C40" SLEW="" name="ddr3_dq[7]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="H41" SLEW="" name="ddr3_dq[8]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15_T_DCI" PADName="H39" SLEW="" name="ddr3_dq[9]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="D42" SLEW="" name="ddr3_dqs_n[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="G42" SLEW="" name="ddr3_dqs_n[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="J42" SLEW="" name="ddr3_dqs_n[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="P42" SLEW="" name="ddr3_dqs_n[3]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AA39" SLEW="" name="ddr3_dqs_n[4]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AE38" SLEW="" name="ddr3_dqs_n[5]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AH39" SLEW="" name="ddr3_dqs_n[6]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AL42" SLEW="" name="ddr3_dqs_n[7]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="D41" SLEW="" name="ddr3_dqs_p[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="G41" SLEW="" name="ddr3_dqs_p[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="K42" SLEW="" name="ddr3_dqs_p[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="R42" SLEW="" name="ddr3_dqs_p[3]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="Y39" SLEW="" name="ddr3_dqs_p[4]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AD38" SLEW="" name="ddr3_dqs_p[5]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AG39" SLEW="" name="ddr3_dqs_p[6]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AL41" SLEW="" name="ddr3_dqs_p[7]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="W36" SLEW="" name="ddr3_odt[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="U38" SLEW="" name="ddr3_ras_n" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="LVCMOS15" PADName="K40" SLEW="" name="ddr3_reset_n" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="NORMAL" IOSTANDARD="SSTL15" PADName="T39" SLEW="" name="ddr3_we_n" IN_TERM="" />}
   puts $mig_prj_file {        </PinSelection>}
   puts $mig_prj_file {        <System_Clock>}
   puts $mig_prj_file {            <Pin PADName="U36/T37(CC_P/N)" Bank="18" name="sys_clk_p/n" />}
   puts $mig_prj_file {        </System_Clock>}
   puts $mig_prj_file {        <System_Control>}
   puts $mig_prj_file {            <Pin PADName="AY25" Bank="33" name="sys_rst" />}
   puts $mig_prj_file {            <Pin PADName="AW37(DQS)" Bank="15" name="init_calib_complete" />}
   puts $mig_prj_file {            <Pin PADName="No connect" Bank="Select Bank" name="tg_compare_error" />}
   puts $mig_prj_file {        </System_Control>}
   puts $mig_prj_file {        <TimingParameters>}
   puts $mig_prj_file {            <Parameters twtr="7.5" trrd="5" trefi="7.8" tfaw="27" trtp="7.5" tcke="5" trfc="260" trp="13.91" tras="34" trcd="13.91" />}
   puts $mig_prj_file {        </TimingParameters>}
   puts $mig_prj_file {        <mrBurstLength name="Burst Length" >8 - Fixed</mrBurstLength>}
   puts $mig_prj_file {        <mrBurstType name="Read Burst Type and Length" >Sequential</mrBurstType>}
   puts $mig_prj_file {        <mrCasLatency name="CAS Latency" >6</mrCasLatency>}
   puts $mig_prj_file {        <mrMode name="Mode" >Normal</mrMode>}
   puts $mig_prj_file {        <mrDllReset name="DLL Reset" >No</mrDllReset>}
   puts $mig_prj_file {        <mrPdMode name="DLL control for precharge PD" >Slow Exit</mrPdMode>}
   puts $mig_prj_file {        <emrDllEnable name="DLL Enable" >Enable</emrDllEnable>}
   puts $mig_prj_file {        <emrOutputDriveStrength name="Output Driver Impedance Control" >RZQ/7</emrOutputDriveStrength>}
   puts $mig_prj_file {        <emrMirrorSelection name="Address Mirroring" >Disable</emrMirrorSelection>}
   puts $mig_prj_file {        <emrCSSelection name="Controller Chip Select Pin" >Enable</emrCSSelection>}
   puts $mig_prj_file {        <emrRTT name="RTT (nominal) - On Die Termination (ODT)" >RZQ/6</emrRTT>}
   puts $mig_prj_file {        <emrPosted name="Additive Latency (AL)" >0</emrPosted>}
   puts $mig_prj_file {        <emrOCD name="Write Leveling Enable" >Disabled</emrOCD>}
   puts $mig_prj_file {        <emrDQS name="TDQS enable" >Enabled</emrDQS>}
   puts $mig_prj_file {        <emrRDQS name="Qoff" >Output Buffer Enabled</emrRDQS>}
   puts $mig_prj_file {        <mr2PartialArraySelfRefresh name="Partial-Array Self Refresh" >Full Array</mr2PartialArraySelfRefresh>}
   puts $mig_prj_file {        <mr2CasWriteLatency name="CAS write latency" >5</mr2CasWriteLatency>}
   puts $mig_prj_file {        <mr2AutoSelfRefresh name="Auto Self Refresh" >Enabled</mr2AutoSelfRefresh>}
   puts $mig_prj_file {        <mr2SelfRefreshTempRange name="High Temparature Self Refresh Rate" >Normal</mr2SelfRefreshTempRange>}
   puts $mig_prj_file {        <mr2RTTWR name="RTT_WR - Dynamic On Die Termination (ODT)" >Dynamic ODT off</mr2RTTWR>}
   puts $mig_prj_file {        <PortInterface>AXI</PortInterface>}
   puts $mig_prj_file {        <AXIParameters>}
   puts $mig_prj_file {            <C0_C_RD_WR_ARB_ALGORITHM>RD_PRI_REG</C0_C_RD_WR_ARB_ALGORITHM>}
   puts $mig_prj_file {            <C0_S_AXI_ADDR_WIDTH>32</C0_S_AXI_ADDR_WIDTH>}
   puts $mig_prj_file {            <C0_S_AXI_DATA_WIDTH>32</C0_S_AXI_DATA_WIDTH>}
   puts $mig_prj_file {            <C0_S_AXI_ID_WIDTH>7</C0_S_AXI_ID_WIDTH>}
   puts $mig_prj_file {            <C0_S_AXI_SUPPORTS_NARROW_BURST>1</C0_S_AXI_SUPPORTS_NARROW_BURST>}
   puts $mig_prj_file {        </AXIParameters>}
   puts $mig_prj_file {    </Controller>}
   puts $mig_prj_file {</Project>}

   close $mig_prj_file
}
# End of write_mig_file_axi_system_mig_7series_0_0()



##################################################################
# DESIGN PROCs
##################################################################



# Procedure to create entire design; Provide argument to make
# procedure reusable. If parentCell is "", will use root.
proc create_root_design { parentCell } {

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     puts "ERROR: Unable to find parent cell <$parentCell>!"
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     puts "ERROR: Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set M_AXIS_TDATA_TEST [ create_bd_port -dir O -from 31 -to 0 M_AXIS_TDATA_TEST ]
  set M_AXIS_TLAST_TEST [ create_bd_port -dir O M_AXIS_TLAST_TEST ]
  set M_AXIS_TREADY_TEST [ create_bd_port -dir O M_AXIS_TREADY_TEST ]
  set M_AXIS_TVALID_TEST [ create_bd_port -dir O M_AXIS_TVALID_TEST ]
  set STATE_TEST [ create_bd_port -dir O -from 3 -to 0 STATE_TEST ]
  set S_AXI_WDATA_dbg [ create_bd_port -dir O -from 31 -to 0 S_AXI_WDATA_dbg ]
  set S_AXI_WSTRB_dbg [ create_bd_port -dir O -from 3 -to 0 S_AXI_WSTRB_dbg ]
  set axi_awaddr_dbg [ create_bd_port -dir O -from 31 -to 0 axi_awaddr_dbg ]
  set axi_c2c_link_status_out [ create_bd_port -dir O axi_c2c_link_status_out ]
  set axi_c2c_multi_bit_error_out [ create_bd_port -dir O axi_c2c_multi_bit_error_out ]
  set axi_c2c_selio_rx_clk_in [ create_bd_port -dir I -type clk axi_c2c_selio_rx_clk_in ]
  set_property -dict [ list CONFIG.FREQ_HZ {200000000}  ] $axi_c2c_selio_rx_clk_in
  set axi_c2c_selio_rx_data_in [ create_bd_port -dir I -from 8 -to 0 axi_c2c_selio_rx_data_in ]
  set axi_c2c_selio_tx_clk_out [ create_bd_port -dir O -type clk axi_c2c_selio_tx_clk_out ]
  set axi_c2c_selio_tx_data_out [ create_bd_port -dir O -from 8 -to 0 axi_c2c_selio_tx_data_out ]
  set calib_bit [ create_bd_port -dir O -from 11 -to 0 calib_bit ]
  set clk_200MHz [ create_bd_port -dir O -type clk clk_200MHz ]
  set clk_in1 [ create_bd_port -dir I -type clk clk_in1 ]
  set_property -dict [ list CONFIG.CLK_DOMAIN {axi_system_mig_7series_0_0_ui_clk} CONFIG.FREQ_HZ {200000000} CONFIG.PHASE {0}  ] $clk_in1
  set clk_spi_data [ create_bd_port -dir O -from 31 -to 0 clk_spi_data ]
  set clk_spi_start [ create_bd_port -dir O clk_spi_start ]
  set dac_spi_data [ create_bd_port -dir O -from 15 -to 0 dac_spi_data ]
  set dac_spi_start [ create_bd_port -dir O dac_spi_start ]
  set ddr3_addr [ create_bd_port -dir O -from 15 -to 0 ddr3_addr ]
  set ddr3_ba [ create_bd_port -dir O -from 2 -to 0 ddr3_ba ]
  set ddr3_cas_n [ create_bd_port -dir O ddr3_cas_n ]
  set ddr3_ck_n [ create_bd_port -dir O -from 0 -to 0 ddr3_ck_n ]
  set ddr3_ck_p [ create_bd_port -dir O -from 0 -to 0 ddr3_ck_p ]
  set ddr3_cke [ create_bd_port -dir O -from 0 -to 0 ddr3_cke ]
  set ddr3_cs_n [ create_bd_port -dir O -from 0 -to 0 ddr3_cs_n ]
  set ddr3_dm [ create_bd_port -dir O -from 7 -to 0 ddr3_dm ]
  set ddr3_dq [ create_bd_port -dir IO -from 63 -to 0 ddr3_dq ]
  set ddr3_dqs_n [ create_bd_port -dir IO -from 7 -to 0 ddr3_dqs_n ]
  set ddr3_dqs_p [ create_bd_port -dir IO -from 7 -to 0 ddr3_dqs_p ]
  set ddr3_odt [ create_bd_port -dir O -from 0 -to 0 ddr3_odt ]
  set ddr3_ras_n [ create_bd_port -dir O ddr3_ras_n ]
  set ddr3_reset_n [ create_bd_port -dir O ddr3_reset_n ]
  set ddr3_we_n [ create_bd_port -dir O ddr3_we_n ]
  set dout [ create_bd_port -dir I -from 63 -to 0 dout ]
  set empty [ create_bd_port -dir I empty ]
  set ext_reset_in [ create_bd_port -dir I -type rst ext_reset_in ]
  set fifo2stream_numofwrite [ create_bd_port -dir O -from 31 -to 0 fifo2stream_numofwrite ]
  set fifo2stream_start [ create_bd_port -dir O fifo2stream_start ]
  set fifo_rst [ create_bd_port -dir O fifo_rst ]
  set gp0 [ create_bd_port -dir O gp0 ]
  set init_calib_complete [ create_bd_port -dir O init_calib_complete ]
  set nr_of_writes_TEST [ create_bd_port -dir O -from 31 -to 0 nr_of_writes_TEST ]
  set once_down [ create_bd_port -dir O once_down ]
  set ps_data [ create_bd_port -dir O -from 15 -to 0 ps_data ]
  set ps_incdec [ create_bd_port -dir O ps_incdec ]
  set ps_sel [ create_bd_port -dir O -from 3 -to 0 ps_sel ]
  set ps_start [ create_bd_port -dir O ps_start ]
  set rd_en [ create_bd_port -dir O rd_en ]
  set rg_dur [ create_bd_port -dir O -from 31 -to 0 rg_dur ]
  set s_axi_awaddr_dbg [ create_bd_port -dir O -from 31 -to 0 s_axi_awaddr_dbg ]
  set sel_fifo2ddr [ create_bd_port -dir O sel_fifo2ddr ]
  set slv_reg_wren_dbg [ create_bd_port -dir O slv_reg_wren_dbg ]
  set soft_tdc_en [ create_bd_port -dir O soft_tdc_en ]
  set stop_oper [ create_bd_port -dir O stop_oper ]
  set sys_clk0 [ create_bd_port -dir I sys_clk0 ]
  set sys_clk1 [ create_bd_port -dir I sys_clk1 ]
  set sys_clk2 [ create_bd_port -dir I sys_clk2 ]
  set sys_clk3 [ create_bd_port -dir I sys_clk3 ]
  set sys_clk4 [ create_bd_port -dir I sys_clk4 ]
  set sys_clk5 [ create_bd_port -dir I sys_clk5 ]
  set sys_clk6 [ create_bd_port -dir I sys_clk6 ]
  set sys_clk7 [ create_bd_port -dir I sys_clk7 ]
  set sys_clk8 [ create_bd_port -dir I sys_clk8 ]
  set sys_clk9 [ create_bd_port -dir I sys_clk9 ]
  set sys_clk10 [ create_bd_port -dir I sys_clk10 ]
  set sys_clk11 [ create_bd_port -dir I sys_clk11 ]
  set sys_clk_n [ create_bd_port -dir I sys_clk_n ]
  set sys_clk_p [ create_bd_port -dir I sys_clk_p ]
  set sys_rst [ create_bd_port -dir I -type rst sys_rst ]
  set tdc_en_bypass_on [ create_bd_port -dir O tdc_en_bypass_on ]
  set tdc_en_p_dur [ create_bd_port -dir O -from 15 -to 0 tdc_en_p_dur ]
  set tdc_en_p_start [ create_bd_port -dir O tdc_en_p_start ]
  set tdc_in [ create_bd_port -dir I -from 11 -to 0 tdc_in ]
  set ui_clk [ create_bd_port -dir O ui_clk ]
  set ui_clk_sync_rst [ create_bd_port -dir O -type rst ui_clk_sync_rst ]

  # Create instance: axi4lite_gp_0, and set properties
  set axi4lite_gp_0 [ create_bd_cell -type ip -vlnv fedadesign.com:fedalib:axi4lite_gp:1.0 axi4lite_gp_0 ]

  # Create instance: axi_chip2chip_0, and set properties
  set axi_chip2chip_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_chip2chip:4.2 axi_chip2chip_0 ]
  set_property -dict [ list CONFIG.C_AURORA_WIDTH {2} CONFIG.C_AXI_DATA_WIDTH {32} CONFIG.C_AXI_ID_WIDTH {6} CONFIG.C_AXI_WUSER_WIDTH {4} CONFIG.C_COMMON_CLK {0} CONFIG.C_DISABLE_CLK_SHIFT {false} CONFIG.C_DISABLE_DESKEW {false} CONFIG.C_ECC_ENABLE {true} CONFIG.C_INCLUDE_AXILITE {0} CONFIG.C_INTERFACE_MODE {2} CONFIG.C_INTERFACE_TYPE {1} CONFIG.C_MASTER_FPGA {0} CONFIG.C_USE_DIFF_CLK {false} CONFIG.C_USE_DIFF_IO {false}  ] $axi_chip2chip_0

  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list CONFIG.c_include_mm2s {0} CONFIG.c_include_sg {0} CONFIG.c_micro_dma {0} CONFIG.c_s2mm_burst_size {128} CONFIG.c_sg_length_width {23}  ] $axi_dma_0

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list CONFIG.ENABLE_ADVANCED_OPTIONS {1} CONFIG.ENABLE_PROTOCOL_CHECKERS {0} CONFIG.M01_HAS_DATA_FIFO {2} CONFIG.NUM_MI {9} CONFIG.NUM_SI {2} CONFIG.STRATEGY {2} CONFIG.SYNCHRONIZATION_STAGES {2}  ] $axi_interconnect_0

  # Create instance: axi_protocol_converter_1, and set properties
  set axi_protocol_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_protocol_converter:2.1 axi_protocol_converter_1 ]

  # Create instance: axi_protocol_converter_2, and set properties
  set axi_protocol_converter_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_protocol_converter:2.1 axi_protocol_converter_2 ]

  # Create instance: axi_protocol_converter_3, and set properties
  set axi_protocol_converter_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_protocol_converter:2.1 axi_protocol_converter_3 ]

  # Create instance: axi_protocol_converter_4, and set properties
  set axi_protocol_converter_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_protocol_converter:2.1 axi_protocol_converter_4 ]

  # Create instance: axi_protocol_converter_5, and set properties
  set axi_protocol_converter_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_protocol_converter:2.1 axi_protocol_converter_5 ]

  # Create instance: fifo2ddr_0, and set properties
  set fifo2ddr_0 [ create_bd_cell -type ip -vlnv fedadesign.com:fedalib:fifo2ddr:1.0 fifo2ddr_0 ]

  # Create instance: gen_test_pulse_lite_0, and set properties
  set gen_test_pulse_lite_0 [ create_bd_cell -type ip -vlnv fedadesign.com:fedalib:gen_test_pulse_lite:1.0 gen_test_pulse_lite_0 ]

  # Create instance: mig_7series_0, and set properties
  set mig_7series_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mig_7series:2.3 mig_7series_0 ]

  # Generate the PRJ File for MIG
  set str_mig_folder [get_property IP_DIR [ get_ips [ get_property CONFIG.Component_Name $mig_7series_0 ] ] ]
  set str_mig_file_name mig_a.prj
  set str_mig_file_path ${str_mig_folder}/${str_mig_file_name}

  write_mig_file_axi_system_mig_7series_0_0 $str_mig_file_path

  set_property -dict [ list CONFIG.BOARD_MIG_PARAM {Custom} CONFIG.RESET_BOARD_INTERFACE {Custom} CONFIG.XML_INPUT_FILE {mig_a.prj}  ] $mig_7series_0

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: regfiles_lite_0, and set properties
  set regfiles_lite_0 [ create_bd_cell -type ip -vlnv fedadesign.com:fedalib:regfiles_lite:1.0 regfiles_lite_0 ]

  # Create instance: tdc_calib_capture_lite_0, and set properties
  set tdc_calib_capture_lite_0 [ create_bd_cell -type ip -vlnv fedadesign.com:fedalib:tdc_calib_capture_lite:1.0 tdc_calib_capture_lite_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins axi_chip2chip_0/m_axi] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins axi_interconnect_0/S01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins axi_protocol_converter_1/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins mig_7series_0/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins axi_protocol_converter_2/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins axi_protocol_converter_3/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_interconnect_0/M04_AXI] [get_bd_intf_pins axi_protocol_converter_4/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M05_AXI [get_bd_intf_pins axi_interconnect_0/M05_AXI] [get_bd_intf_pins axi_protocol_converter_5/S_AXI]
  connect_bd_intf_net -intf_net axi_protocol_converter_1_M_AXI [get_bd_intf_pins axi4lite_gp_0/S00_AXI] [get_bd_intf_pins axi_protocol_converter_1/M_AXI]
  connect_bd_intf_net -intf_net axi_protocol_converter_2_M_AXI [get_bd_intf_pins axi_protocol_converter_2/M_AXI] [get_bd_intf_pins gen_test_pulse_lite_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_protocol_converter_3_M_AXI [get_bd_intf_pins axi_protocol_converter_3/M_AXI] [get_bd_intf_pins regfiles_lite_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_protocol_converter_4_M_AXI [get_bd_intf_pins axi_protocol_converter_4/M_AXI] [get_bd_intf_pins tdc_calib_capture_lite_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_protocol_converter_5_M_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins axi_protocol_converter_5/M_AXI]
  connect_bd_intf_net -intf_net fifo2ddr_0_M_AXIS [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM] [get_bd_intf_pins fifo2ddr_0/M_AXIS]

  # Create port connections
  connect_bd_net -net M01_ARESETN_1 [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins mig_7series_0/aresetn] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net Net [get_bd_ports ddr3_dq] [get_bd_pins mig_7series_0/ddr3_dq]
  connect_bd_net -net Net1 [get_bd_ports ddr3_dqs_n] [get_bd_pins mig_7series_0/ddr3_dqs_n]
  connect_bd_net -net Net2 [get_bd_ports ddr3_dqs_p] [get_bd_pins mig_7series_0/ddr3_dqs_p]
  connect_bd_net -net axi4lite_gp_0_S_AXI_WDATA_dbg [get_bd_ports S_AXI_WDATA_dbg] [get_bd_pins axi4lite_gp_0/S_AXI_WDATA_dbg]
  connect_bd_net -net axi4lite_gp_0_S_AXI_WSTRB_dbg [get_bd_ports S_AXI_WSTRB_dbg] [get_bd_pins axi4lite_gp_0/S_AXI_WSTRB_dbg]
  connect_bd_net -net axi4lite_gp_0_axi_awaddr_dbg [get_bd_ports axi_awaddr_dbg] [get_bd_pins axi4lite_gp_0/axi_awaddr_dbg]
  connect_bd_net -net axi4lite_gp_0_gp0 [get_bd_ports gp0] [get_bd_pins axi4lite_gp_0/gp0]
  connect_bd_net -net axi4lite_gp_0_s_axi_awaddr_dbg [get_bd_ports s_axi_awaddr_dbg] [get_bd_pins axi4lite_gp_0/s_axi_awaddr_dbg]
  connect_bd_net -net axi4lite_gp_0_slv_reg_wren_dbg [get_bd_ports slv_reg_wren_dbg] [get_bd_pins axi4lite_gp_0/slv_reg_wren_dbg]
  connect_bd_net -net axi_c2c_selio_rx_clk_in_1 [get_bd_ports axi_c2c_selio_rx_clk_in] [get_bd_pins axi_chip2chip_0/axi_c2c_selio_rx_clk_in]
  connect_bd_net -net axi_c2c_selio_rx_data_in_1 [get_bd_ports axi_c2c_selio_rx_data_in] [get_bd_pins axi_chip2chip_0/axi_c2c_selio_rx_data_in]
  connect_bd_net -net axi_chip2chip_0_axi_c2c_link_status_out [get_bd_ports axi_c2c_link_status_out] [get_bd_pins axi_chip2chip_0/axi_c2c_link_status_out]
  connect_bd_net -net axi_chip2chip_0_axi_c2c_multi_bit_error_out [get_bd_ports axi_c2c_multi_bit_error_out] [get_bd_pins axi_chip2chip_0/axi_c2c_multi_bit_error_out]
  connect_bd_net -net axi_chip2chip_0_axi_c2c_selio_tx_clk_out [get_bd_ports axi_c2c_selio_tx_clk_out] [get_bd_pins axi_chip2chip_0/axi_c2c_selio_tx_clk_out]
  connect_bd_net -net axi_chip2chip_0_axi_c2c_selio_tx_data_out [get_bd_ports axi_c2c_selio_tx_data_out] [get_bd_pins axi_chip2chip_0/axi_c2c_selio_tx_data_out]
  connect_bd_net -net clk_in1_1 [get_bd_ports clk_200MHz] [get_bd_ports clk_in1] [get_bd_pins axi4lite_gp_0/s00_axi_aclk] [get_bd_pins axi_chip2chip_0/idelay_ref_clk] [get_bd_pins axi_chip2chip_0/m_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/M05_ACLK] [get_bd_pins axi_interconnect_0/M06_ACLK] [get_bd_pins axi_interconnect_0/M07_ACLK] [get_bd_pins axi_interconnect_0/M08_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_interconnect_0/S01_ACLK] [get_bd_pins axi_protocol_converter_1/aclk] [get_bd_pins axi_protocol_converter_2/aclk] [get_bd_pins axi_protocol_converter_3/aclk] [get_bd_pins axi_protocol_converter_4/aclk] [get_bd_pins axi_protocol_converter_5/aclk] [get_bd_pins fifo2ddr_0/sys_clk] [get_bd_pins gen_test_pulse_lite_0/s00_axi_aclk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins regfiles_lite_0/s00_axi_aclk] [get_bd_pins tdc_calib_capture_lite_0/s00_axi_aclk]
  connect_bd_net -net dout_1 [get_bd_ports dout] [get_bd_pins fifo2ddr_0/dout]
  connect_bd_net -net empty_1 [get_bd_ports empty] [get_bd_pins fifo2ddr_0/empty]
  connect_bd_net -net ext_reset_in_1 [get_bd_ports ext_reset_in] [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins proc_sys_reset_1/ext_reset_in]
  connect_bd_net -net fifo2ddr_0_M_AXIS_TDATA_TEST [get_bd_ports M_AXIS_TDATA_TEST] [get_bd_pins fifo2ddr_0/M_AXIS_TDATA_TEST]
  connect_bd_net -net fifo2ddr_0_M_AXIS_TLAST_TEST [get_bd_ports M_AXIS_TLAST_TEST] [get_bd_pins fifo2ddr_0/M_AXIS_TLAST_TEST]
  connect_bd_net -net fifo2ddr_0_M_AXIS_TREADY_TEST [get_bd_ports M_AXIS_TREADY_TEST] [get_bd_pins fifo2ddr_0/M_AXIS_TREADY_TEST]
  connect_bd_net -net fifo2ddr_0_M_AXIS_TVALID_TEST [get_bd_ports M_AXIS_TVALID_TEST] [get_bd_pins fifo2ddr_0/M_AXIS_TVALID_TEST]
  connect_bd_net -net fifo2ddr_0_STATE_TEST [get_bd_ports STATE_TEST] [get_bd_pins fifo2ddr_0/STATE_TEST]
  connect_bd_net -net fifo2ddr_0_nr_of_writes_TEST [get_bd_ports nr_of_writes_TEST] [get_bd_pins fifo2ddr_0/nr_of_writes_TEST]
  connect_bd_net -net fifo2ddr_0_rd_en [get_bd_ports rd_en] [get_bd_pins fifo2ddr_0/rd_en]
  connect_bd_net -net gen_test_pulse_lite_0_once_down [get_bd_ports once_down] [get_bd_pins gen_test_pulse_lite_0/once_down]
  connect_bd_net -net mig_7series_0_ddr3_addr [get_bd_ports ddr3_addr] [get_bd_pins mig_7series_0/ddr3_addr]
  connect_bd_net -net mig_7series_0_ddr3_ba [get_bd_ports ddr3_ba] [get_bd_pins mig_7series_0/ddr3_ba]
  connect_bd_net -net mig_7series_0_ddr3_cas_n [get_bd_ports ddr3_cas_n] [get_bd_pins mig_7series_0/ddr3_cas_n]
  connect_bd_net -net mig_7series_0_ddr3_ck_n [get_bd_ports ddr3_ck_n] [get_bd_pins mig_7series_0/ddr3_ck_n]
  connect_bd_net -net mig_7series_0_ddr3_ck_p [get_bd_ports ddr3_ck_p] [get_bd_pins mig_7series_0/ddr3_ck_p]
  connect_bd_net -net mig_7series_0_ddr3_cke [get_bd_ports ddr3_cke] [get_bd_pins mig_7series_0/ddr3_cke]
  connect_bd_net -net mig_7series_0_ddr3_cs_n [get_bd_ports ddr3_cs_n] [get_bd_pins mig_7series_0/ddr3_cs_n]
  connect_bd_net -net mig_7series_0_ddr3_dm [get_bd_ports ddr3_dm] [get_bd_pins mig_7series_0/ddr3_dm]
  connect_bd_net -net mig_7series_0_ddr3_odt [get_bd_ports ddr3_odt] [get_bd_pins mig_7series_0/ddr3_odt]
  connect_bd_net -net mig_7series_0_ddr3_ras_n [get_bd_ports ddr3_ras_n] [get_bd_pins mig_7series_0/ddr3_ras_n]
  connect_bd_net -net mig_7series_0_ddr3_reset_n [get_bd_ports ddr3_reset_n] [get_bd_pins mig_7series_0/ddr3_reset_n]
  connect_bd_net -net mig_7series_0_ddr3_we_n [get_bd_ports ddr3_we_n] [get_bd_pins mig_7series_0/ddr3_we_n]
  connect_bd_net -net mig_7series_0_init_calib_complete [get_bd_ports init_calib_complete] [get_bd_pins mig_7series_0/init_calib_complete]
  connect_bd_net -net mig_7series_0_mmcm_locked [get_bd_pins mig_7series_0/mmcm_locked] [get_bd_pins proc_sys_reset_0/dcm_locked] [get_bd_pins proc_sys_reset_1/dcm_locked]
  connect_bd_net -net mig_7series_0_ui_clk [get_bd_ports ui_clk] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins mig_7series_0/ui_clk] [get_bd_pins proc_sys_reset_1/slowest_sync_clk]
  connect_bd_net -net mig_7series_0_ui_clk_sync_rst [get_bd_ports ui_clk_sync_rst] [get_bd_pins mig_7series_0/ui_clk_sync_rst]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_pins axi4lite_gp_0/s00_axi_aresetn] [get_bd_pins axi_chip2chip_0/m_aresetn] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/M05_ARESETN] [get_bd_pins axi_interconnect_0/M06_ARESETN] [get_bd_pins axi_interconnect_0/M07_ARESETN] [get_bd_pins axi_interconnect_0/M08_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_interconnect_0/S01_ARESETN] [get_bd_pins axi_protocol_converter_1/aresetn] [get_bd_pins axi_protocol_converter_2/aresetn] [get_bd_pins axi_protocol_converter_3/aresetn] [get_bd_pins axi_protocol_converter_4/aresetn] [get_bd_pins axi_protocol_converter_5/aresetn] [get_bd_pins fifo2ddr_0/resetn] [get_bd_pins gen_test_pulse_lite_0/s00_axi_aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn] [get_bd_pins regfiles_lite_0/s00_axi_aresetn] [get_bd_pins tdc_calib_capture_lite_0/s00_axi_aresetn]
  connect_bd_net -net regfiles_lite_0_calib_bit [get_bd_ports calib_bit] [get_bd_pins regfiles_lite_0/calib_bit]
  connect_bd_net -net regfiles_lite_0_clk_spi_data [get_bd_ports clk_spi_data] [get_bd_pins regfiles_lite_0/clk_spi_data]
  connect_bd_net -net regfiles_lite_0_clk_spi_start [get_bd_ports clk_spi_start] [get_bd_pins regfiles_lite_0/clk_spi_start]
  connect_bd_net -net regfiles_lite_0_dac_spi_data [get_bd_ports dac_spi_data] [get_bd_pins regfiles_lite_0/dac_spi_data]
  connect_bd_net -net regfiles_lite_0_dac_spi_start [get_bd_ports dac_spi_start] [get_bd_pins regfiles_lite_0/dac_spi_start]
  connect_bd_net -net regfiles_lite_0_fifo2stream_numofwrite [get_bd_ports fifo2stream_numofwrite] [get_bd_pins fifo2ddr_0/num_of_write] [get_bd_pins regfiles_lite_0/fifo2stream_numofwrite]
  connect_bd_net -net regfiles_lite_0_fifo2stream_start [get_bd_ports fifo2stream_start] [get_bd_pins fifo2ddr_0/start] [get_bd_pins regfiles_lite_0/fifo2stream_start]
  connect_bd_net -net regfiles_lite_0_fifo_rst [get_bd_ports fifo_rst] [get_bd_pins regfiles_lite_0/fifo_rst]
  connect_bd_net -net regfiles_lite_0_ps_data [get_bd_ports ps_data] [get_bd_pins regfiles_lite_0/ps_data]
  connect_bd_net -net regfiles_lite_0_ps_incdec [get_bd_ports ps_incdec] [get_bd_pins regfiles_lite_0/ps_incdec]
  connect_bd_net -net regfiles_lite_0_ps_sel [get_bd_ports ps_sel] [get_bd_pins regfiles_lite_0/ps_sel]
  connect_bd_net -net regfiles_lite_0_ps_start [get_bd_ports ps_start] [get_bd_pins regfiles_lite_0/ps_start]
  connect_bd_net -net regfiles_lite_0_rg_dur [get_bd_ports rg_dur] [get_bd_pins regfiles_lite_0/rg_dur]
  connect_bd_net -net regfiles_lite_0_sel_fifo2ddr [get_bd_ports sel_fifo2ddr] [get_bd_pins regfiles_lite_0/sel_fifo2ddr]
  connect_bd_net -net regfiles_lite_0_soft_tdc_en [get_bd_ports soft_tdc_en] [get_bd_pins regfiles_lite_0/soft_tdc_en]
  connect_bd_net -net regfiles_lite_0_stop_oper [get_bd_ports stop_oper] [get_bd_pins regfiles_lite_0/stop_oper]
  connect_bd_net -net regfiles_lite_0_tdc_en_bypass_on [get_bd_ports tdc_en_bypass_on] [get_bd_pins regfiles_lite_0/tdc_en_bypass_on]
  connect_bd_net -net regfiles_lite_0_tdc_en_p_dur [get_bd_ports tdc_en_p_dur] [get_bd_pins regfiles_lite_0/tdc_en_p_dur]
  connect_bd_net -net regfiles_lite_0_tdc_en_p_start [get_bd_ports tdc_en_p_start] [get_bd_pins regfiles_lite_0/tdc_en_p_start]
  connect_bd_net -net sys_clk0_1 [get_bd_ports sys_clk0] [get_bd_pins tdc_calib_capture_lite_0/sys_clk0]
  connect_bd_net -net sys_clk10_1 [get_bd_ports sys_clk10] [get_bd_pins tdc_calib_capture_lite_0/sys_clk10]
  connect_bd_net -net sys_clk11_1 [get_bd_ports sys_clk11] [get_bd_pins tdc_calib_capture_lite_0/sys_clk11]
  connect_bd_net -net sys_clk1_1 [get_bd_ports sys_clk1] [get_bd_pins tdc_calib_capture_lite_0/sys_clk1]
  connect_bd_net -net sys_clk2_1 [get_bd_ports sys_clk2] [get_bd_pins tdc_calib_capture_lite_0/sys_clk2]
  connect_bd_net -net sys_clk3_1 [get_bd_ports sys_clk3] [get_bd_pins tdc_calib_capture_lite_0/sys_clk3]
  connect_bd_net -net sys_clk4_1 [get_bd_ports sys_clk4] [get_bd_pins tdc_calib_capture_lite_0/sys_clk4]
  connect_bd_net -net sys_clk5_1 [get_bd_ports sys_clk5] [get_bd_pins tdc_calib_capture_lite_0/sys_clk5]
  connect_bd_net -net sys_clk6_1 [get_bd_ports sys_clk6] [get_bd_pins tdc_calib_capture_lite_0/sys_clk6]
  connect_bd_net -net sys_clk7_1 [get_bd_ports sys_clk7] [get_bd_pins tdc_calib_capture_lite_0/sys_clk7]
  connect_bd_net -net sys_clk8_1 [get_bd_ports sys_clk8] [get_bd_pins tdc_calib_capture_lite_0/sys_clk8]
  connect_bd_net -net sys_clk9_1 [get_bd_ports sys_clk9] [get_bd_pins tdc_calib_capture_lite_0/sys_clk9]
  connect_bd_net -net sys_clk_n_1 [get_bd_ports sys_clk_n] [get_bd_pins mig_7series_0/sys_clk_n]
  connect_bd_net -net sys_clk_p_1 [get_bd_ports sys_clk_p] [get_bd_pins mig_7series_0/sys_clk_p]
  connect_bd_net -net sys_rst_1 [get_bd_ports sys_rst] [get_bd_pins mig_7series_0/sys_rst]
  connect_bd_net -net tdc_in_1 [get_bd_ports tdc_in] [get_bd_pins tdc_calib_capture_lite_0/tdc_in]

  # Create address segments
  create_bd_addr_seg -range 0x1000 -offset 0x50000000 [get_bd_addr_spaces axi_chip2chip_0/MAXI] [get_bd_addr_segs axi4lite_gp_0/S00_AXI/S00_AXI_reg] SEG_axi4lite_gp_0_S00_AXI_reg
  create_bd_addr_seg -range 0x10000 -offset 0x51000000 [get_bd_addr_spaces axi_chip2chip_0/MAXI] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x1000 -offset 0x50001000 [get_bd_addr_spaces axi_chip2chip_0/MAXI] [get_bd_addr_segs gen_test_pulse_lite_0/S00_AXI/S00_AXI_reg] SEG_gen_test_pulse_lite_0_S00_AXI_reg
  create_bd_addr_seg -range 0x20000000 -offset 0x60000000 [get_bd_addr_spaces axi_chip2chip_0/MAXI] [get_bd_addr_segs mig_7series_0/memmap/memaddr] SEG_mig_7series_0_memaddr
  create_bd_addr_seg -range 0x1000 -offset 0x50002000 [get_bd_addr_spaces axi_chip2chip_0/MAXI] [get_bd_addr_segs regfiles_lite_0/S00_AXI/S00_AXI_reg] SEG_regfiles_lite_0_S00_AXI_reg
  create_bd_addr_seg -range 0x1000 -offset 0x50003000 [get_bd_addr_spaces axi_chip2chip_0/MAXI] [get_bd_addr_segs tdc_calib_capture_lite_0/S00_AXI/S00_AXI_reg] SEG_tdc_calib_capture_lite_0_S00_AXI_reg
  create_bd_addr_seg -range 0x1000 -offset 0x50000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs axi4lite_gp_0/S00_AXI/S00_AXI_reg] SEG_axi4lite_gp_0_S00_AXI_reg
  create_bd_addr_seg -range 0x10000 -offset 0x51000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x1000 -offset 0x50001000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs gen_test_pulse_lite_0/S00_AXI/S00_AXI_reg] SEG_gen_test_pulse_lite_0_S00_AXI_reg
  create_bd_addr_seg -range 0x20000000 -offset 0x60000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs mig_7series_0/memmap/memaddr] SEG_mig_7series_0_memaddr
  create_bd_addr_seg -range 0x1000 -offset 0x50002000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs regfiles_lite_0/S00_AXI/S00_AXI_reg] SEG_regfiles_lite_0_S00_AXI_reg
  create_bd_addr_seg -range 0x1000 -offset 0x50003000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs tdc_calib_capture_lite_0/S00_AXI/S00_AXI_reg] SEG_tdc_calib_capture_lite_0_S00_AXI_reg
  

  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
}
# End of create_root_design()


##################################################################
# MAIN FLOW
##################################################################

create_root_design ""


